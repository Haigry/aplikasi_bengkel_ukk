generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model booking {
  id          Int            @id @default(autoincrement())
  queue       Int
  date        DateTime
  message     String         @db.Text
  status      booking_status @default(PENDING)
  kendaraanId String
  userId      Int
  createdAt   DateTime       @default(now())
  updatedAt   DateTime
  kendaraan   kendaraan      @relation(fields: [kendaraanId], references: [noPolisi], map: "Booking_kendaraanId_fkey")
  user        user           @relation(fields: [userId], references: [id], map: "Booking_userId_fkey")

  @@index([kendaraanId], map: "Booking_kendaraanId_fkey")
  @@index([userId], map: "Booking_userId_fkey")
}

model karyawan {
  id        Int       @id @default(autoincrement())
  name      String
  position  String
  userId    Int?      @unique(map: "Karyawan_userId_key")
  createdAt DateTime  @default(now())
  updatedAt DateTime
  user      user?     @relation(fields: [userId], references: [id], map: "Karyawan_userId_fkey")
  riwayat   riwayat[]
}

model kendaraan {
  noPolisi  String    @id
  merk      String
  tipe      String
  transmisi String
  tahun     Int
  CC        Int
  userId    Int
  booking   booking[]
  user      user      @relation(fields: [userId], references: [id], map: "Kendaraan_userId_fkey")
  riwayat   riwayat[]

  @@index([userId], map: "Kendaraan_userId_fkey")
}

model laporan {
  id              Int              @id @default(autoincrement())
  tanggal         DateTime
  periode         String
  omset           Float            @default(0)
  jumlahServis    Int              @default(0)
  jumlahSparepart Int              @default(0)
  totalTransaksi  Int              @default(0)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime
  riwayatlaporan  riwayatlaporan[]
}

model riwayat {
  id               Int                @id @default(autoincrement())
  totalHarga       Float              @default(0)
  quantity         Int                @default(1)
  harga            Float              @default(0)
  bookingId        Int?
  status           String             @default("PENDING")
  notes            String?            @db.Text
  userId           Int
  karyawanId       Int
  kendaraanId      String
  sparepartId      Int?
  serviceId        Int?
  createdAt        DateTime           @default(now())
  updatedAt        DateTime
  karyawan         karyawan           @relation(fields: [karyawanId], references: [id], map: "Riwayat_karyawanId_fkey")
  kendaraan        kendaraan          @relation(fields: [kendaraanId], references: [noPolisi], map: "Riwayat_kendaraanId_fkey")
  service          service?           @relation(fields: [serviceId], references: [id], map: "Riwayat_serviceId_fkey")
  sparepart        sparepart?         @relation(fields: [sparepartId], references: [id], map: "Riwayat_sparepartId_fkey")
  user             user               @relation(fields: [userId], references: [id], map: "Riwayat_userId_fkey")
  riwayatlaporan   riwayatlaporan[]
  riwayatsparepart riwayatsparepart[]

  @@index([karyawanId], map: "Riwayat_karyawanId_fkey")
  @@index([kendaraanId], map: "Riwayat_kendaraanId_fkey")
  @@index([serviceId], map: "Riwayat_serviceId_fkey")
  @@index([sparepartId], map: "Riwayat_sparepartId_fkey")
  @@index([userId], map: "Riwayat_userId_fkey")
}

model riwayatlaporan {
  laporanId Int
  riwayatId Int
  laporan   laporan @relation(fields: [laporanId], references: [id], map: "RiwayatLaporan_laporanId_fkey")
  riwayat   riwayat @relation(fields: [riwayatId], references: [id], map: "RiwayatLaporan_riwayatId_fkey")

  @@id([laporanId, riwayatId])
  @@index([riwayatId], map: "RiwayatLaporan_riwayatId_fkey")
}

model riwayatsparepart {
  id          Int       @id @default(autoincrement())
  riwayatId   Int
  sparepartId Int
  quantity    Int       @default(1)
  harga       Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
  riwayat     riwayat   @relation(fields: [riwayatId], references: [id], map: "RiwayatSparepart_riwayatId_fkey")
  sparepart   sparepart @relation(fields: [sparepartId], references: [id], map: "RiwayatSparepart_sparepartId_fkey")

  @@index([riwayatId], map: "RiwayatSparepart_riwayatId_fkey")
  @@index([sparepartId], map: "RiwayatSparepart_sparepartId_fkey")
}

model service {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  harga       Float
  riwayat     riwayat[]
}

model sparepart {
  id               Int                @id @default(autoincrement())
  name             String
  harga            Float
  stok             Int                @default(0)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime
  riwayat          riwayat[]
  riwayatsparepart riwayatsparepart[]
}

model user {
  id        Int         @id @default(autoincrement())
  email     String      @unique(map: "User_email_key")
  password  String
  name      String?
  noTelp    String?
  alamat    String?     @db.Text
  NoKTP     String?     @unique(map: "User_NoKTP_key")
  role      user_role   @default(CUSTOMER)
  createdAt DateTime    @default(now())
  updatedAt DateTime
  booking   booking[]
  karyawan  karyawan?
  kendaraan kendaraan[]
  riwayat   riwayat[]
}

enum booking_status {
  PENDING
  CONFIRMED
  CANCELLED
}

enum user_role {
  ADMIN
  KARYAWAN
  CUSTOMER
}
